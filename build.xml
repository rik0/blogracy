<project name="Blogracy" basedir="." default="all"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <!-- General properties and class paths -->
    <property name="src.dir" value="blogracy/src"/>
    <property name="lib.dir" value="lib"/>
    <property name="package.prefix" value="it/unipr/aotlab/blogracy"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>


    <!-- project build paths and stuff -->
    <property name="build.dir" value="build"/>
    <property name="vuze.config.dir" value="build/config"/>
    <property name="classes.dir" value="${vuze.config.dir}/plugins/blogracy"/>

    <!-- ** DOWNLOAD VUZE STUFF ** -->
    <!-- VUZE JARS -->
    <property name="vuze.version" value="4700"/>
    <property name="vuze.short" value="Vuze_${vuze.version}"/>
    <property name="vuze.base.url" value="http://sourceforge.net/projects/azureus/files/vuze"/>

    <property name="vuze.jar" value="${vuze.short}.jar"/>
    <property name="vuze.jar.path" value="${lib.dir}/${vuze.jar}"/>
    <property name="vuze.jar.url" value="${vuze.base.url}/${vuze.short}/${vuze.jar}/download"/>
    <available property="vuze.jar.exists" file="${vuze.jar.path}"/>

    <property name="vuze.src" value="${vuze.short}_source.zip"/>
    <property name="vuze.src.path" value="${lib.dir}/${vuze.src}"/>
    <property name="vuze.src.url" value="${vuze.base.url}/${vuze.short}/${vuze.src}/download"/>
    <available property="vuze.src.exists" file="${vuze.src.path}"/>

    <target name="vuze-jar-download" unless="vuze.jar.exists"
            description="Downloads the Vuze jar file">
        <mkdir dir="${lib.dir}"/>
        <get src="${vuze.jar.url}" dest="${vuze.jar.path}"/>
    </target>

    <target name="vuze-src-download" unless="vuze.src.exists"
            description="Downloads the Vuze sources">
        <mkdir dir="${lib.dir}"/>
        <get src="${vuze.src.url}" dest="${vuze.src.path}"/>
    </target>

    <target name="vuze-download" depends="vuze-jar-download,vuze-src-download"
            description="Downloads both the Vuze Jar and its sources">
    </target>
    <!-- ** END OF DOWNLOAD VUZE STUFF ** -->

    <!-- ** DOWNLOAD DEPENDENCIES WITH MAVEN ** -->
    <!-- MAVEN ANT TASKS -->
    <property name="maven-ant-tasks.jar" value="maven-ant-tasks-2.1.3.jar"/>
    <property name="maven-ant-tasks.path"
              value="${lib.dir}${file.separator}${maven-ant-tasks.jar}"/>
    <property name="maven-ant-tasks.url"
              value="http://apache.fis.uniroma2.it//maven/binaries/${maven-ant-tasks.jar}"/>
    <available property="maven-ant-tasks.exists" file="${maven-ant-tasks.path}"/>
    <path id="maven-ant-tasks.classpath" path="${maven-ant-tasks.path}"/>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="antlib:org.apache.maven.artifact.ant"
             classpathref="maven-ant-tasks.classpath"/>

    <!-- This will download the "latest version" of the maven-ant-tasks if needed -->
    <target name="mvn-ant-tasks-download" unless="maven-ant-tasks.exists"
            description="Downloads Maven Ant Tasks, which is needed to use MVN dependencies to get other stuff">
        <mkdir dir="${lib.dir}"/>
        <get src="${maven-ant-tasks.url}" dest="${maven-ant-tasks.path}"/>
    </target>

    <target name="mvn-init"
            depends="mvn-ant-tasks-download"
            xmlns:artifact="antlib:org.apache.maven.artifact.ant"
            unless="compile.classpath"
            description="Gets all the necessary libraries but vuze as specified in the pom file">

        <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
            <isset property="maven.repo.local"/>
        </condition>
        <echo>maven.repo.local=${maven.repo.local}</echo>
        <artifact:localRepository id="local.repository" path="${maven.repo.local}"/>
        <artifact:pom file="pom.xml" id="blogracy.project"/>
        <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
            <artifact:pom refid="blogracy.project"/>
            <artifact:localRepository refid="local.repository"/>
        </artifact:dependencies>

        <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
            <artifact:pom refid="blogracy.project"/>
            <artifact:localRepository refid="local.repository"/>
        </artifact:dependencies>

        <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
            <artifact:pom refid="blogracy.project"/>
            <artifact:localRepository refid="local.repository"/>
        </artifact:dependencies>
        <path id="full-classpath">
            <pathelement path="${classes.dir}"/>
            <path refid="classpath"/>
            <path refid="compile.classpath"/>
        </path>
    </target>
    <!-- ** END OF DOWNLOAD DEPENDENCIES WITH MAVEN ** -->

    <target name="clean"
            description="Cleans the build files">
        <delete dir="${vuze.config.dir}/plugins/blogracy"/>
        <delete file="blogracy.bat"/>
        <delete file="blogracy.sh"/>
    </target>

    <target name="compile" depends="mvn-init,vuze-download"
            description="Compiles the sources">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}"
               classpathref="full-classpath"/>
    </target>

    <target name="deploy-static-files">
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}/resources"/>
        </copy>
    </target>

    <target name="build" depends="compile,deploy-static-files"
            description="Compiles and moves relevant files to the output directory">
        <copy todir="${classes.dir}/messages">
            <fileset dir="${src.dir}/messages"/>
        </copy>
        <copy file="${src.dir}/plugin.properties" todir="${classes.dir}"/>
    </target>

    <target name="build-bat"
            description="Builds a BAT file"
            depends="build">
        <file file="blogracy.bat" basedir="." name="blogracy.bat"/>
        <property refid="full-classpath" name="var.full-classpath"/>
        <!-- do not indent! keep it on the left margin! -->
        <echo output="blogracy.bat">
java -Xmx128m -Dazureus.config.path=${vuze.config.dir} -cp ${var.full-classpath} org.gudy.azureus2.ui.common.Main --ui=console
        </echo>
    </target>

    <target name="build-sh"
            description="Builds a shell file"
            depends="build">
        <file file="blogracy.sh" basedir="." name="blogracy.sh"/>
        <!-- do not indent! keep it on the left margin! -->
        <property refid="full-classpath" name="var.full-classpath"/>
        <echo output="blogracy.sh">
#!/bin/sh

java -Xmx128m -Dazureus.config.path=${vuze.config.dir} \
-cp ${var.full-classpath} \
org.gudy.azureus2.ui.common.Main \
--ui=console
        </echo>
        <chmod file="blogracy.sh" perm="755"/>
    </target>

    <target name="build-scripts" depends="build-bat,build-sh">

    </target>

    <target name="all" depends="build-scripts,build">

    </target>
</project>
